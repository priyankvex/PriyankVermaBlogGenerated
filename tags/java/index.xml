<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on Steam - a minimal theme for Hugo</title>
    <link>https://example.org/tags/java/</link>
    <description>Recent content in java on Steam - a minimal theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Aug 2017 08:21:28 +0000</lastBuildDate>
    
	<atom:link href="https://example.org/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Clean Code Chapter 1&amp;2: Clean Code &amp; Meaningful names</title>
      <link>https://example.org/2017/08/05/clean-code-chapter-12-clean-code-meaningful-names/</link>
      <pubDate>Sat, 05 Aug 2017 08:21:28 +0000</pubDate>
      
      <guid>https://example.org/2017/08/05/clean-code-chapter-12-clean-code-meaningful-names/</guid>
      <description>I have started reading the book _Clean Code by Robert C. Martin, _which is considered to be a industry standard for writing maintainable and elegant code.
Because this book is such a heavy read, and each chapter is full of content and a knowledge bank in itself, for personal reference I&amp;rsquo;ve decided to summarise each chapter in a set of blog posts.
Chapter 1 : Clean Code This was more like chapter 0.</description>
    </item>
    
    <item>
      <title>Philosophy Behind The Offensive Programming</title>
      <link>https://example.org/2017/07/08/philosophy-behind-the-offensive-programming/</link>
      <pubDate>Fri, 07 Jul 2017 19:30:08 +0000</pubDate>
      
      <guid>https://example.org/2017/07/08/philosophy-behind-the-offensive-programming/</guid>
      <description>Recently I was listening to a podcast and there was this really smart guy Piwai talking about something that instantly captivated by attention. That was the coining of the term Offensive Programming.
What is offensive programming?
Well, you can find the literature on Wikipedia and also I am not the best person to explain that. So check that out please. But fundamentally, _offensive programming _refers to a style of programming that is exact opposite of the more famous counter-part the defensive programming.</description>
    </item>
    
    <item>
      <title>5 notes on MVP architecture pattern for Android</title>
      <link>https://example.org/2016/12/19/5-notes-on-mvp-architecture-pattern-for-android/</link>
      <pubDate>Mon, 19 Dec 2016 16:31:50 +0000</pubDate>
      
      <guid>https://example.org/2016/12/19/5-notes-on-mvp-architecture-pattern-for-android/</guid>
      <description>Image credits Macoscope  MVP (Model View and Presenter) is an architectural pattern inspired by the popular MVC pattern.
MVP addresses two main points :
 1. Make views as dumb as possible. The dumber the better. 2. Make each layer loosely coupled and easily testable in isolation.  I am using MVP in one of my production project and have used in some dem0 apps. Here are my 5 notes on using MVP for android.</description>
    </item>
    
    <item>
      <title>Practice Shapes : Android App To Learn Shapes</title>
      <link>https://example.org/2015/12/28/practice-shapes-android-app-to-learn-shapes/</link>
      <pubDate>Mon, 28 Dec 2015 14:56:00 +0000</pubDate>
      
      <guid>https://example.org/2015/12/28/practice-shapes-android-app-to-learn-shapes/</guid>
      <description>Only way to learn something is to learn it by yourself. Recently I have been playing with Canvas in android and it has been fun! :D
As they say knowledge is knowing tomato is a fruit. Wisdom is not putting it in vegetable basket. And best way to persist new gained &amp;ldquo;wisdom&amp;rdquo; is to put it in use.
Practice Shapes is a fun app both for kids and grown-up kids (Yes.</description>
    </item>
    
    <item>
      <title>Rails Number Helper Port to Android</title>
      <link>https://example.org/2015/10/06/rails-number-helper-port-to-android/</link>
      <pubDate>Tue, 06 Oct 2015 14:06:02 +0000</pubDate>
      
      <guid>https://example.org/2015/10/06/rails-number-helper-port-to-android/</guid>
      <description>A polyglot developer will understand, there is always something you like about one language and you wish was available for another language too.
So, recently I started learning rails and found _number_helper _API very cool and fun to use. It gives you easy API to convert numbers into many formats like _number_to_human _which will convert 20000 to _20 Thousands _or number_to_human_size that will convert 1024 to 1 KB.
That was it I wanted this stuff for Android too.</description>
    </item>
    
    <item>
      <title>Making GCM client in Android and Application server in Ruby on Rails</title>
      <link>https://example.org/2015/09/11/making-gcm-client-in-android-and-application-server-in-ruby-on-rails/</link>
      <pubDate>Fri, 11 Sep 2015 19:17:16 +0000</pubDate>
      
      <guid>https://example.org/2015/09/11/making-gcm-client-in-android-and-application-server-in-ruby-on-rails/</guid>
      <description>It is always fun to play with new APIs and tools. GCM is not something I was getting my hands on for the first time but it changed completely since last time I did a project using this.
But the good news is it has changed for good. New service classes makes it easier to write GCM clients for Android, GCM default configuration makes writing test servers and apps to play with very less tedious.</description>
    </item>
    
    <item>
      <title>Paint App in Android</title>
      <link>https://example.org/2015/09/06/paint-app-in-android/</link>
      <pubDate>Sun, 06 Sep 2015 10:14:04 +0000</pubDate>
      
      <guid>https://example.org/2015/09/06/paint-app-in-android/</guid>
      <description>Recently I was learning about Canvas and Custom views in Android and to put the theory in practice I made a pretty simple **Paint App. **
Source code of the app can be found https://github.com/priyankvex/Paint-App-Android.
[caption id=&amp;ldquo;attachment_159&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;480&amp;rdquo;] Screenshot of the app[/caption]
The App is pretty simple with features 1. Create Drawings (Obvious one :P). 2. Select different brush sizes. 3. Eraser with different sizes. 4. Color pallet. 5. Save drawings in Gallery.</description>
    </item>
    
    <item>
      <title>Making an OCR app for Android using Tesseract.</title>
      <link>https://example.org/2015/09/02/making-an-ocr-app-for-android-using-tesseract/</link>
      <pubDate>Wed, 02 Sep 2015 11:01:58 +0000</pubDate>
      
      <guid>https://example.org/2015/09/02/making-an-ocr-app-for-android-using-tesseract/</guid>
      <description>Star on GitHub
Recently I was playing with OCR library by google called as &amp;ldquo;Tesseract&amp;rdquo; (cool name for a library!).
[caption id=&amp;ldquo;attachment_153&amp;rdquo; align=&amp;ldquo;alignleft&amp;rdquo; width=&amp;ldquo;234&amp;rdquo;] App in action.[/caption]
It was a fun experience. This post shows how you can make a simple OCR app in Android using Tesseract.
We will be using Tess-Two a fork of Tesseract with some additional tools like Liptonica which is an image processing library.
If you want an even easier way to get started with OCR on Android you can try this library built by me.</description>
    </item>
    
    <item>
      <title>Android Application for a basic Calculator.</title>
      <link>https://example.org/2014/06/04/android-application-for-a-basic-calculator/</link>
      <pubDate>Wed, 04 Jun 2014 19:35:10 +0000</pubDate>
      
      <guid>https://example.org/2014/06/04/android-application-for-a-basic-calculator/</guid>
      <description>Hi there,
This time would like to share my new project &amp;lsquo; A basic calculator built for the android platform.&amp;rsquo;
Creating android apps always seemed cool to me . Able to start learning to create one is even cooler.
This project uses simple things like XML layouts, Activities using java, Intents, OnclickListeners and some more basic concepts of java and android.
Below are the screenshots of the app running in both real android device and AVD.</description>
    </item>
    
    <item>
      <title>A Basic Calculator using Swing and JAVA(TM).</title>
      <link>https://example.org/2014/05/22/a-basic-calculator-using-swing-and-javatm/</link>
      <pubDate>Thu, 22 May 2014 17:34:12 +0000</pubDate>
      
      <guid>https://example.org/2014/05/22/a-basic-calculator-using-swing-and-javatm/</guid>
      <description>Hi,there . This time i would like to share my new work. This a basic four function calculator made using java and Swing. The GUI created is with the help of&amp;hellip;.you guessed it right SWING.

Java simple calculator
 A four-function calculator with the following functions: Addition – adds two numbers Subtraction – subtracts number two from number one Multiplication – Multiplies two numbers Division – divides number two into number one</description>
    </item>
    
  </channel>
</rss>