<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>engineer on Steam - a minimal theme for Hugo</title>
    <link>https://example.org/tags/engineer/</link>
    <description>Recent content in engineer on Steam - a minimal theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Aug 2018 18:41:18 +0000</lastBuildDate>
    
	<atom:link href="https://example.org/tags/engineer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Acceptance Tests: The Best Medium of Communication Between Stakeholders (if done right)</title>
      <link>https://example.org/2018/08/06/acceptance-tests-the-best-medium-of-communication-between-stakeholders-if-done-right/</link>
      <pubDate>Sun, 05 Aug 2018 18:41:18 +0000</pubDate>
      
      <guid>https://example.org/2018/08/06/acceptance-tests-the-best-medium-of-communication-between-stakeholders-if-done-right/</guid>
      <description>It&amp;rsquo;s a nice pleasant morning, and you have just entered the office. You greet your friends and grab a cup of coffee. You check your email and there is a new story assigned to you.
&amp;ldquo;As a customer, I get my usage logs backed up&amp;rdquo;
This is where is fun begins.
Communicating Requirements A product engineer&amp;rsquo;s job is to have effective and clear communication as much as it is to write code.</description>
    </item>
    
    <item>
      <title>6 Lessons On Work Ethic I Learned In One Year Of Professional Career</title>
      <link>https://example.org/2018/07/21/6-lessons-on-work-ethic-i-learned-in-one-year-of-professional-career/</link>
      <pubDate>Sat, 21 Jul 2018 18:17:06 +0000</pubDate>
      
      <guid>https://example.org/2018/07/21/6-lessons-on-work-ethic-i-learned-in-one-year-of-professional-career/</guid>
      <description>Time flies. Recently I had completed one year as a full-time employee at my current employer **Squad. **A year has passed, and I decided it was time to revisit instances, memories, and experiences and to recollect what I had learned as a professional in this past year.
It was also a wake-up call to reassess and redirect the ship named professional career to make sure it doesn&amp;rsquo;t get stuck in a whirlpool.</description>
    </item>
    
    <item>
      <title>Tracking Metrics to Surface and Solve Problems: Metric Tracking Practices I&#39;ve Learned So Far</title>
      <link>https://example.org/2018/05/21/tracking-metrics-to-surface-and-solve-problems-metric-tracking-practices-ive-learned-so-far/</link>
      <pubDate>Sun, 20 May 2018 20:11:59 +0000</pubDate>
      
      <guid>https://example.org/2018/05/21/tracking-metrics-to-surface-and-solve-problems-metric-tracking-practices-ive-learned-so-far/</guid>
      <description>It is a nice pleasant evening, you are sipping coffee and reviewing your code one final time, just so that you can gather enough confidence to hit the deploy button.
But a fact of life as a software engineer is that things can go wrong. Small changes may result in unexpected outcomes, including outages, errors or negatively impacting customers.
And when problems occur, either we can do random checks and validations that may or may not solve the problem or we can have a disciplined problem-solving approach that relies on data rather than intuitions.</description>
    </item>
    
    <item>
      <title>Strive to learn : 8 Ways to optimize for learning at work as a software engineer</title>
      <link>https://example.org/2018/04/07/strive-to-learn-8-ways-to-optimize-for-learning-at-work-as-software-engineer/</link>
      <pubDate>Sat, 07 Apr 2018 15:30:58 +0000</pubDate>
      
      <guid>https://example.org/2018/04/07/strive-to-learn-8-ways-to-optimize-for-learning-at-work-as-software-engineer/</guid>
      <description>A large open space with amazing ergonomic chairs where people discuss and execute upon disrupting ideas. It&amp;rsquo;s right next to company&amp;rsquo;s game room where you unwind after a hard work day. Here is we as engineers, get to work on products that our customers love and we love delivering that delight by continuous delivery (or something else :P).
Yet the most prominent thing that excites and should excite an effective engineer is the opportunity for learning at work.</description>
    </item>
    
    <item>
      <title>Practical Problem Solving Framework: Inspired By The Toyota Way</title>
      <link>https://example.org/2018/03/25/practical-problem-solving-framework-inspired-by-the-toyota-way/</link>
      <pubDate>Sun, 25 Mar 2018 11:32:12 +0000</pubDate>
      
      <guid>https://example.org/2018/03/25/practical-problem-solving-framework-inspired-by-the-toyota-way/</guid>
      <description>We all will agree to a certain point that having a system/process for anything reduces chances of errors.
As an engineer or someone people look forward to propose solutions to problems it&amp;rsquo;s beneficial to have a framework in place to solve problems effectively.
Recently I was reading _**The Toyota Way, **_and it suggested a framework to _Practical Problem Solving. _It almost felt trivial that this sort of framework would be invaluable to software engineers too (in fact for everyone).</description>
    </item>
    
    <item>
      <title>8 System Design Principles I learned After Doing It Wrong More than 50 Times!</title>
      <link>https://example.org/2018/03/11/8-system-design-principles-i-learned-after-doing-it-wrong-more-than-50-times/</link>
      <pubDate>Sun, 11 Mar 2018 07:16:00 +0000</pubDate>
      
      <guid>https://example.org/2018/03/11/8-system-design-principles-i-learned-after-doing-it-wrong-more-than-50-times/</guid>
      <description>At Squad, we strive to build awesome products to solve customer(internal and external) needs. As a product engineer, paramount part of your job is to design and build products. Dig deep into the root cause of the problems, design solutions and implement them as the end product.
Over the course of my journey so far, here are the 8 system and product design principles that I&amp;rsquo;ve learned from other awesome people at Squad, from feedback and simply doing it not right enough multiple times.</description>
    </item>
    
  </channel>
</rss>