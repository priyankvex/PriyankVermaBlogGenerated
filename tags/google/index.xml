<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>google on Steam - a minimal theme for Hugo</title>
    <link>https://example.org/tags/google/</link>
    <description>Recent content in google on Steam - a minimal theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Mar 2018 07:16:00 +0000</lastBuildDate>
    
	<atom:link href="https://example.org/tags/google/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>8 System Design Principles I learned After Doing It Wrong More than 50 Times!</title>
      <link>https://example.org/2018/03/11/8-system-design-principles-i-learned-after-doing-it-wrong-more-than-50-times/</link>
      <pubDate>Sun, 11 Mar 2018 07:16:00 +0000</pubDate>
      
      <guid>https://example.org/2018/03/11/8-system-design-principles-i-learned-after-doing-it-wrong-more-than-50-times/</guid>
      <description>At Squad, we strive to build awesome products to solve customer(internal and external) needs. As a product engineer, paramount part of your job is to design and build products. Dig deep into the root cause of the problems, design solutions and implement them as the end product.
Over the course of my journey so far, here are the 8 system and product design principles that I&amp;rsquo;ve learned from other awesome people at Squad, from feedback and simply doing it not right enough multiple times.</description>
    </item>
    
    <item>
      <title>Deploying a nginx application using Kubernetes for Self-Healing and Scaling</title>
      <link>https://example.org/2017/11/19/deploying-a-nginx-application-using-kubernetes-for-self-healing-and-scaling/</link>
      <pubDate>Sun, 19 Nov 2017 15:50:50 +0000</pubDate>
      
      <guid>https://example.org/2017/11/19/deploying-a-nginx-application-using-kubernetes-for-self-healing-and-scaling/</guid>
      <description>Kubernetes is an open source system for automating deployment, scaling and management of containerized applications. A more technical term for it is, container orchestrator which is used to manage large fleets of containers.
Minikube is an all-in-one single node installation for trying out kubernetes on local machines. And the following post covers deploying a nginx application container using kubernetes in minikube.
If you don&amp;rsquo;t have, then this link has it all to install minikube and kubectl (command line tool to access minikube) : Download and install minikube and kubectl</description>
    </item>
    
    <item>
      <title>Making GCM client in Android and Application server in Ruby on Rails</title>
      <link>https://example.org/2015/09/11/making-gcm-client-in-android-and-application-server-in-ruby-on-rails/</link>
      <pubDate>Fri, 11 Sep 2015 19:17:16 +0000</pubDate>
      
      <guid>https://example.org/2015/09/11/making-gcm-client-in-android-and-application-server-in-ruby-on-rails/</guid>
      <description>It is always fun to play with new APIs and tools. GCM is not something I was getting my hands on for the first time but it changed completely since last time I did a project using this.
But the good news is it has changed for good. New service classes makes it easier to write GCM clients for Android, GCM default configuration makes writing test servers and apps to play with very less tedious.</description>
    </item>
    
  </channel>
</rss>