<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>calling on Erlich Bachman</title>
    <link>https://priyankvex.github.io/PriyankVermaBlogGenerated/tags/calling/</link>
    <description>Recent content in calling on Erlich Bachman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 03 Jun 2018 13:14:07 +0000</lastBuildDate>
    
	<atom:link href="https://priyankvex.github.io/PriyankVermaBlogGenerated/tags/calling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating Outbound Call Warm Transfer Using Twilio In Python and Django</title>
      <link>https://priyankvex.github.io/PriyankVermaBlogGenerated/2018/06/03/creating-outbound-call-warm-transfer-using-twilio-in-python-and-django/</link>
      <pubDate>Sun, 03 Jun 2018 13:14:07 +0000</pubDate>
      
      <guid>https://priyankvex.github.io/PriyankVermaBlogGenerated/2018/06/03/creating-outbound-call-warm-transfer-using-twilio-in-python-and-django/</guid>
      <description>Have you ever been connected to a call where it was transferred to a third person for further assistance? Well, that&amp;rsquo;s call transferring.
Warm transfer of calls, in contrast to cold transfer, doesn&amp;rsquo;t disconnect the call in between and thus gives the customers a more seamless experience.
Recently at work, I was building a system to convert regular calls to a warm transfer if needed. And in this post, I&amp;rsquo;ll be sharing what I learned while building the warm transfer system.</description>
    </item>
    
  </channel>
</rss>