<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android studio on Steam - a minimal theme for Hugo</title>
    <link>https://example.org/tags/android-studio/</link>
    <description>Recent content in android studio on Steam - a minimal theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Dec 2016 16:31:50 +0000</lastBuildDate>
    
	<atom:link href="https://example.org/tags/android-studio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>5 notes on MVP architecture pattern for Android</title>
      <link>https://example.org/2016/12/19/5-notes-on-mvp-architecture-pattern-for-android/</link>
      <pubDate>Mon, 19 Dec 2016 16:31:50 +0000</pubDate>
      
      <guid>https://example.org/2016/12/19/5-notes-on-mvp-architecture-pattern-for-android/</guid>
      <description>Image credits Macoscope  MVP (Model View and Presenter) is an architectural pattern inspired by the popular MVC pattern.
MVP addresses two main points :
 1. Make views as dumb as possible. The dumber the better. 2. Make each layer loosely coupled and easily testable in isolation.  I am using MVP in one of my production project and have used in some dem0 apps. Here are my 5 notes on using MVP for android.</description>
    </item>
    
    <item>
      <title>Rails Number Helper Port to Android</title>
      <link>https://example.org/2015/10/06/rails-number-helper-port-to-android/</link>
      <pubDate>Tue, 06 Oct 2015 14:06:02 +0000</pubDate>
      
      <guid>https://example.org/2015/10/06/rails-number-helper-port-to-android/</guid>
      <description>A polyglot developer will understand, there is always something you like about one language and you wish was available for another language too.
So, recently I started learning rails and found _number_helper _API very cool and fun to use. It gives you easy API to convert numbers into many formats like _number_to_human _which will convert 20000 to _20 Thousands _or number_to_human_size that will convert 1024 to 1 KB.
That was it I wanted this stuff for Android too.</description>
    </item>
    
    <item>
      <title>Paint App in Android</title>
      <link>https://example.org/2015/09/06/paint-app-in-android/</link>
      <pubDate>Sun, 06 Sep 2015 10:14:04 +0000</pubDate>
      
      <guid>https://example.org/2015/09/06/paint-app-in-android/</guid>
      <description>Recently I was learning about Canvas and Custom views in Android and to put the theory in practice I made a pretty simple **Paint App. **
Source code of the app can be found https://github.com/priyankvex/Paint-App-Android.
[caption id=&amp;ldquo;attachment_159&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;480&amp;rdquo;] Screenshot of the app[/caption]
The App is pretty simple with features 1. Create Drawings (Obvious one :P). 2. Select different brush sizes. 3. Eraser with different sizes. 4. Color pallet. 5. Save drawings in Gallery.</description>
    </item>
    
    <item>
      <title>Making an OCR app for Android using Tesseract.</title>
      <link>https://example.org/2015/09/02/making-an-ocr-app-for-android-using-tesseract/</link>
      <pubDate>Wed, 02 Sep 2015 11:01:58 +0000</pubDate>
      
      <guid>https://example.org/2015/09/02/making-an-ocr-app-for-android-using-tesseract/</guid>
      <description>Star on GitHub
Recently I was playing with OCR library by google called as &amp;ldquo;Tesseract&amp;rdquo; (cool name for a library!).
[caption id=&amp;ldquo;attachment_153&amp;rdquo; align=&amp;ldquo;alignleft&amp;rdquo; width=&amp;ldquo;234&amp;rdquo;] App in action.[/caption]
It was a fun experience. This post shows how you can make a simple OCR app in Android using Tesseract.
We will be using Tess-Two a fork of Tesseract with some additional tools like Liptonica which is an image processing library.
If you want an even easier way to get started with OCR on Android you can try this library built by me.</description>
    </item>
    
    <item>
      <title>How to build Tesseract OCR library for Android Studio?</title>
      <link>https://example.org/2015/08/30/how-to-build-tesseract-ocr-library-for-android-studio/</link>
      <pubDate>Sun, 30 Aug 2015 10:07:28 +0000</pubDate>
      
      <guid>https://example.org/2015/08/30/how-to-build-tesseract-ocr-library-for-android-studio/</guid>
      <description>Star On GitHub
If you ever tried to create an OCR app for Android you must have stumbled upon the OCR library by Google Tesseract. And then the problems began.
To use the library in your project you first need to build it. But building the library to be compatible with gradle, which is the new build system for Android projects is little not so easily stated anywhere in the library manual.</description>
    </item>
    
    <item>
      <title>5 Coolest features of Android Studio</title>
      <link>https://example.org/2015/01/26/5-coolest-features-of-android-studio/</link>
      <pubDate>Mon, 26 Jan 2015 20:24:30 +0000</pubDate>
      
      <guid>https://example.org/2015/01/26/5-coolest-features-of-android-studio/</guid>
      <description>Android Studio is out and stable now. It is always fun to try new tools. Right?
So far it has been around 2 months since I have been using Android Studio. And I guess it is the best time to select my personal choice of 5 coolest features of it.
If you want some technical or geeky feature list RTFM! This post is not meant for that.
1. Code preview scrolling</description>
    </item>
    
  </channel>
</rss>