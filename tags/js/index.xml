<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JS on Erlich Bachman</title>
    <link>https://priyankvex.github.io/PriyankVermaBlogGenerated/tags/js/</link>
    <description>Recent content in JS on Erlich Bachman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 25 Jun 2019 13:29:07 +0000</lastBuildDate>
    
	<atom:link href="https://priyankvex.github.io/PriyankVermaBlogGenerated/tags/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dependency Injection: Taming the modules that make up our software.</title>
      <link>https://priyankvex.github.io/PriyankVermaBlogGenerated/2019/06/25/dependency-injection-taming-the-modules-that-make-up-our-software/</link>
      <pubDate>Tue, 25 Jun 2019 13:29:07 +0000</pubDate>
      
      <guid>https://priyankvex.github.io/PriyankVermaBlogGenerated/2019/06/25/dependency-injection-taming-the-modules-that-make-up-our-software/</guid>
      <description>Introduction All software projects, (even relatively smaller ones) are the result of aggregation of several components and modules. As these software projects grow and evolve, the way we connect these components becomes a win or lose factor.
I believe, that the way we orchestrate these components decides if the software will evolve as fast as the business needs it to, or gets tangled in its own complexity and slows the business down.</description>
    </item>
    
  </channel>
</rss>